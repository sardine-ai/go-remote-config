# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
        options: >-
          --network-alias localstack
        env:
          SERVICES: "s3"
          EDGE_PORT: 4566
          AWS_DEFAULT_REGION: us-east-1
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build
      run: go build -v ./...

    - name: Wait for LocalStack to be ready
      run: |
        for i in {1..30}; do
          if curl -s http://localhost:4566/_localstack/health | grep "\"s3\": \"running\"" > /dev/null; then
            echo "LocalStack is ready"
            break
          fi
          echo "Waiting for LocalStack..."
          sleep 5
        done

    - name: Test
      run:  go test -race -coverprofile=coverage.txt -coverpkg=./... -v github.com/sardine-ai/go-remote-config/client github.com/sardine-ai/go-remote-config/model github.com/sardine-ai/go-remote-config/source

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
